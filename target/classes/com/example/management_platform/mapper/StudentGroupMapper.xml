<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.management_platform.mapper.StudentGroupMapper">
    <insert id="insertByStudent">
      INSERT INTO student_group(STUDENT_ID, STUDENT_NAME, STUDENT_NUMBER, GROUP_ID, STUDENT_POSITION, CLASS_ID)values (#{studentId},#{studentName},#{studentNumber},#{groupId},#{studentPosition},#{classId})
    </insert>
    <update id="updateInfoById">
        update management_platform.student_group set group_id=-1,student_notice=null,student_group.student_position=-1,student_apply_reason=null,student_notice=null,gitee_url='未加入仓库' where student_id=#{stduentId}
    </update>
    <update id="updateInfoByStudentId">
        update management_platform.student_group set group_id=-1,student_position=-1,student_apply_reason=null,student_notice=null,gitee_url='未加入仓库' where student_id=#{studentId}
    </update>
    <update id="updateApplyInfo">
        update management_platform.student_group set student_apply_reason=#{studentApplyReason},group_id=#{groupId},student_position=2,group_pro_name=#{groupProName} where student_id=#{studentId}

    </update>
    <update id="updateUrlByGroupId">
        update student_group set gitee_url=#{giteeUrl} where group_id=#{groupId}
    </update>
    <update id="updateLeaderInfoByStudentId">
        update student_group set group_id=#{groupId},group_pro_name=#{groupProName},student_position=#{studentPosition} where student_id=#{studentId}
    </update>
    <update id="updateInfoByStudent">
        update student_group set student_notice=#{studentNotice} where student_id=#{studentId}
    </update>
    <update id="updateAllowByStudentId">
        update student_group set student_position=0,student_notice='加入成功' where student_id=#{studentId}
    </update>
    <update id="updateRejectByStudentId">
        update student_group set student_notice='该小组拒绝加入 重新申请',student_position=0,group_id=-1 where student_group.student_id=#{studentId}
    </update>
    <update id="updateScoreByGroupId">
        update student_score set group_score=#{groupScore} where group_id=#{groupId}
    </update>

    <delete id="deleteByClassId">
        delete from management_platform.group_info where class_id=#{classId}

    </delete>
    <select id="selectByGroupId" resultType="com.example.management_platform.entity.StudentGroup">
        select *from management_platform.student_group where group_id=#{groupId}
    </select>
    <select id="selectByStudentId" resultType="com.example.management_platform.entity.StudentGroup">
        select *from management_platform.student_group where student_id=#{studentId}
    </select>
    <select id="searchByPageAndId" resultType="com.example.management_platform.entity.StudentGroup">
        select *from management_platform.student_group where group_id=#{groupId}
    </select>
</mapper>